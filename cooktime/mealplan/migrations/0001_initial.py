# Generated by Django 4.1.2 on 2022-10-08 04:34

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_measurement.models
import measurement.measures.energy
import measurement.measures.volume
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('ingredient_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingredient_spoonacular', models.IntegerField(blank=True, null=True, unique=True)),
                ('ingredient_name', models.CharField(max_length=200)),
                ('ingredient_aisle', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'ordering': ['ingredient_aisle'],
            },
        ),
        migrations.CreateModel(
            name='MealPlanCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_week', models.DateField()),
                ('end_week', models.DateField()),
                ('leftovers', models.BooleanField(default=False)),
                ('course', models.CharField(choices=[('BR', 'Breakfast'), ('LU', 'Lunch'), ('DN', 'Dinner'), ('DS', 'Dessert'), ('SN', 'Snack'), ('DK', 'Drinks')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Nutrients',
            fields=[
                ('nutrient_id', models.IntegerField(primary_key=True, serialize=False)),
                ('nutrient_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('tnc', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('favorite', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('measurement', django_measurement.models.MeasurementField(blank=True, measurement=measurement.measures.volume.Volume, null=True)),
                ('size', models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeNutrients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('nutrient_cal', django_measurement.models.MeasurementField(default=0, measurement=measurement.measures.energy.Energy)),
                ('nutrient_qty', django_measurement.models.MeasurementField(default=0, measurement=measurement.measures.volume.Volume)),
            ],
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('recipe_id', models.AutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('recipe_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('minutes', models.IntegerField(blank=True, default=60, null=True)),
                ('servings', models.CharField(blank=True, max_length=50, null=True)),
                ('ingredients', models.CharField(max_length=200)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('image', models.URLField(max_length=300)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('credits_text', models.CharField(blank=True, max_length=200, null=True)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('spoonacular', models.IntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('list_title', models.CharField(default='Shopping List 2022-10-07 21:34:37.263944', max_length=200, unique=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingListItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obtained', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.shoppinglist')),
                ('recipe_ing_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.recipeingredients')),
            ],
            options={
                'ordering': ['obtained'],
            },
        ),
        migrations.AddConstraint(
            model_name='recipes',
            constraint=models.UniqueConstraint(fields=('recipe_name', 'source_url'), name='recipes_constraint'),
        ),
        migrations.AddField(
            model_name='recipenutrients',
            name='nutrient_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.nutrients'),
        ),
        migrations.AddField(
            model_name='recipenutrients',
            name='recipe_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.recipes'),
        ),
        migrations.AddField(
            model_name='recipeingredients',
            name='ingredient_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.ingredients'),
        ),
        migrations.AddField(
            model_name='recipeingredients',
            name='recipe_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.recipes'),
        ),
        migrations.AddField(
            model_name='recipebox',
            name='recipe_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.recipes'),
        ),
        migrations.AddField(
            model_name='recipebox',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mealplancalendar',
            name='recipebox',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mealplan.recipebox'),
        ),
        migrations.AddConstraint(
            model_name='recipeingredients',
            constraint=models.UniqueConstraint(fields=('recipe_id', 'ingredient_id', 'measurement', 'size'), name='recipe_ing_constraint'),
        ),
        migrations.AddConstraint(
            model_name='recipebox',
            constraint=models.UniqueConstraint(fields=('user', 'recipe_id'), name='recipe_box_constraint'),
        ),
    ]
